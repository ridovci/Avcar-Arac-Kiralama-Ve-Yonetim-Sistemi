// <auto-generated />
using System;
using AvciCarRental.DataLayer.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AvciCarRental.DataLayer.Migrations
{
    [DbContext(typeof(AvciCarRentalDbContext))]
    partial class AvciCarRentalDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.AdditionalRentalProduct", b =>
                {
                    b.Property<int>("AdditionalRentalProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AdditionalRentalProductId"));

                    b.Property<string>("AdditionalRentalProductDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("AdditionalRentalProductFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("AdditionalRentalProductName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AdditionalRentalProductId");

                    b.ToTable("AdditionalRentalProducts");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.AdditionalRentalProductAssignment", b =>
                {
                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.Property<int>("AdditionalRentalProductId")
                        .HasColumnType("int");

                    b.HasKey("RentalId", "AdditionalRentalProductId");

                    b.HasIndex("AdditionalRentalProductId");

                    b.ToTable("AdditionalRentalProductAssignments");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.AirConditioning", b =>
                {
                    b.Property<int>("AirConditioningId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AirConditioningId"));

                    b.Property<string>("AirConditioningName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("AirConditioningId");

                    b.ToTable("AirConditionings");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Color", b =>
                {
                    b.Property<int>("ColorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ColorId"));

                    b.Property<string>("ColorName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ColorId");

                    b.ToTable("Colors");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.FuelType", b =>
                {
                    b.Property<int>("FuelTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FuelTypeId"));

                    b.Property<string>("FuelTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("FuelTypeId");

                    b.ToTable("FuelTypes");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.GearType", b =>
                {
                    b.Property<int>("GearTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GearTypeId"));

                    b.Property<string>("GearTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("GearTypeId");

                    b.ToTable("GearTypes");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"));

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("LocationId");

                    b.ToTable("Locations");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Log", b =>
                {
                    b.Property<int>("LogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LogId"));

                    b.Property<string>("Action")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ActionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("IpAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("LogId");

                    b.HasIndex("UserId");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Model", b =>
                {
                    b.Property<int>("ModelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ModelId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ModelId");

                    b.HasIndex("BrandId");

                    b.ToTable("Models");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<decimal>("PaymentAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("RentalId")
                        .HasColumnType("int");

                    b.Property<string>("TransactionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PaymentId");

                    b.HasIndex("RentalId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Rental", b =>
                {
                    b.Property<int>("RentalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RentalId"));

                    b.Property<DateTime?>("AdminActionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("AdminUserId")
                        .HasColumnType("int");

                    b.Property<int>("ArrivalLocationId")
                        .HasColumnType("int");

                    b.Property<int>("DepartureLocationId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RentalDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ReturnDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("RentalId");

                    b.HasIndex("ArrivalLocationId");

                    b.HasIndex("DepartureLocationId");

                    b.HasIndex("UserId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Rentals");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RoleId");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("LicenseInfoId")
                        .HasColumnType("int");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("PersonalInfoId")
                        .HasColumnType("int");

                    b.Property<DateTime>("RegistrationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<string>("TCNumber")
                        .IsRequired()
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<int>("UserContactInfoId")
                        .HasColumnType("int");

                    b.HasKey("UserId");

                    b.HasIndex("LicenseInfoId");

                    b.HasIndex("PersonalInfoId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserContactInfoId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.UserContactInfo", b =>
                {
                    b.Property<int>("UserContactInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserContactInfoId"));

                    b.Property<string>("MobilePhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserContactInfoId");

                    b.ToTable("UserContactInfos");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.UserLicenseInfo", b =>
                {
                    b.Property<int>("UserLicenseInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserLicenseInfoId"));

                    b.Property<string>("DriverLicenseClass")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<DateTime>("DriverLicenseIssueDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DriverLicenseNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("UserLicenseInfoId");

                    b.ToTable("UserLicenseInfos");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.UserPersonalInfo", b =>
                {
                    b.Property<int>("UserPersonalInfoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserPersonalInfoId"));

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("GenderCode")
                        .HasMaxLength(1)
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserPersonalInfoId");

                    b.ToTable("UserPersonalInfos");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleId"));

                    b.Property<int>("AirConditioningId")
                        .HasColumnType("int");

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("ColorId")
                        .HasColumnType("int");

                    b.Property<decimal>("DailyRentalFee")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<decimal?>("DiscountRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("FuelTypeId")
                        .HasColumnType("int");

                    b.Property<int>("GearTypeId")
                        .HasColumnType("int");

                    b.Property<int>("LocationId")
                        .HasColumnType("int");

                    b.Property<int>("MinDriverAge")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(18);

                    b.Property<int>("MinDrivingLicenseYear")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValue(1);

                    b.Property<int>("ModelId")
                        .HasColumnType("int");

                    b.Property<int>("ModelYear")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfDoors")
                        .HasColumnType("int");

                    b.Property<int>("NumberOfPeople")
                        .HasColumnType("int");

                    b.Property<string>("NumberPlate")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("AirConditioningId");

                    b.HasIndex("BrandId");

                    b.HasIndex("ColorId");

                    b.HasIndex("FuelTypeId");

                    b.HasIndex("GearTypeId");

                    b.HasIndex("LocationId");

                    b.HasIndex("ModelId");

                    b.HasIndex("VehicleTypeId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleFeature", b =>
                {
                    b.Property<int>("VehicleFeatureId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleFeatureId"));

                    b.Property<string>("VehicleFeatureName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("VehicleFeatureId");

                    b.ToTable("VehicleFeatures");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleFeatureAssignment", b =>
                {
                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleFeaturesId")
                        .HasColumnType("int");

                    b.HasKey("VehicleId", "VehicleFeaturesId");

                    b.HasIndex("VehicleFeaturesId");

                    b.ToTable("VehicleFeatureAssignments");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleImage", b =>
                {
                    b.Property<int>("VehicleImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleImageId"));

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<string>("VehicleImageUrl")
                        .IsRequired()
                        .HasColumnType("varchar(max)");

                    b.HasKey("VehicleImageId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleImages");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleType", b =>
                {
                    b.Property<int>("VehicleTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VehicleTypeId"));

                    b.Property<string>("VehicleTypeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("VehicleTypeId");

                    b.ToTable("VehicleTypes");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.AdditionalRentalProductAssignment", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.AdditionalRentalProduct", "AdditionalRentalProduct")
                        .WithMany("AdditionalRentalProductAssignments")
                        .HasForeignKey("AdditionalRentalProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Rental", "Rental")
                        .WithMany("AdditionalRentalProductAssignments")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AdditionalRentalProduct");

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Log", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Model", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.Brand", "Brand")
                        .WithMany("Models")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Payment", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.Rental", "Rental")
                        .WithMany()
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Rental", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.Location", "ArrivalLocation")
                        .WithMany()
                        .HasForeignKey("ArrivalLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Location", "DepartureLocation")
                        .WithMany()
                        .HasForeignKey("DepartureLocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.User", "User")
                        .WithMany("Rental")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Vehicle", "Vehicle")
                        .WithMany("Rental")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("ArrivalLocation");

                    b.Navigation("DepartureLocation");

                    b.Navigation("User");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.User", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.UserLicenseInfo", "UserLicenseInfo")
                        .WithMany()
                        .HasForeignKey("LicenseInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.UserPersonalInfo", "UserPersonalInfo")
                        .WithMany()
                        .HasForeignKey("PersonalInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Role", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.UserContactInfo", "UserContactInfo")
                        .WithMany()
                        .HasForeignKey("UserContactInfoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");

                    b.Navigation("UserContactInfo");

                    b.Navigation("UserLicenseInfo");

                    b.Navigation("UserPersonalInfo");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Vehicle", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.AirConditioning", "AirConditioning")
                        .WithMany()
                        .HasForeignKey("AirConditioningId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Brand", "Brand")
                        .WithMany()
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Color", "Color")
                        .WithMany()
                        .HasForeignKey("ColorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.FuelType", "FuelType")
                        .WithMany()
                        .HasForeignKey("FuelTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.GearType", "GearType")
                        .WithMany()
                        .HasForeignKey("GearTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Location", "Location")
                        .WithMany()
                        .HasForeignKey("LocationId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Model", "Model")
                        .WithMany()
                        .HasForeignKey("ModelId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.VehicleType", "VehicleType")
                        .WithMany()
                        .HasForeignKey("VehicleTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("AirConditioning");

                    b.Navigation("Brand");

                    b.Navigation("Color");

                    b.Navigation("FuelType");

                    b.Navigation("GearType");

                    b.Navigation("Location");

                    b.Navigation("Model");

                    b.Navigation("VehicleType");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleFeatureAssignment", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.VehicleFeature", "VehicleFeatures")
                        .WithMany("VehicleFeatureAssignments")
                        .HasForeignKey("VehicleFeaturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AvciCarRental.DataLayer.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleFeatureAssignments")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");

                    b.Navigation("VehicleFeatures");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleImage", b =>
                {
                    b.HasOne("AvciCarRental.DataLayer.Entities.Vehicle", "Vehicle")
                        .WithMany("VehicleImages")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.AdditionalRentalProduct", b =>
                {
                    b.Navigation("AdditionalRentalProductAssignments");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Brand", b =>
                {
                    b.Navigation("Models");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Rental", b =>
                {
                    b.Navigation("AdditionalRentalProductAssignments");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.User", b =>
                {
                    b.Navigation("Rental");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.Vehicle", b =>
                {
                    b.Navigation("Rental");

                    b.Navigation("VehicleFeatureAssignments");

                    b.Navigation("VehicleImages");
                });

            modelBuilder.Entity("AvciCarRental.DataLayer.Entities.VehicleFeature", b =>
                {
                    b.Navigation("VehicleFeatureAssignments");
                });
#pragma warning restore 612, 618
        }
    }
}
